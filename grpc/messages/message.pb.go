// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ServerMessage_MessageType int32

const (
	ServerMessage_ERROR           ServerMessage_MessageType = 0
	ServerMessage_PING            ServerMessage_MessageType = 1
	ServerMessage_REGISTRATION_OK ServerMessage_MessageType = 2
	ServerMessage_START_BACKUP    ServerMessage_MessageType = 3
	ServerMessage_STOP_BACKUP     ServerMessage_MessageType = 4
	ServerMessage_GET_STATUS      ServerMessage_MessageType = 5
)

var ServerMessage_MessageType_name = map[int32]string{
	0: "ERROR",
	1: "PING",
	2: "REGISTRATION_OK",
	3: "START_BACKUP",
	4: "STOP_BACKUP",
	5: "GET_STATUS",
}
var ServerMessage_MessageType_value = map[string]int32{
	"ERROR":           0,
	"PING":            1,
	"REGISTRATION_OK": 2,
	"START_BACKUP":    3,
	"STOP_BACKUP":     4,
	"GET_STATUS":      5,
}

func (x ServerMessage_MessageType) String() string {
	return proto.EnumName(ServerMessage_MessageType_name, int32(x))
}
func (ServerMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_message_fe1185ba101a0c0f, []int{0, 0}
}

type ClientMessage_MessageType int32

const (
	ClientMessage_ERROR          ClientMessage_MessageType = 0
	ClientMessage_PONG           ClientMessage_MessageType = 1
	ClientMessage_REGISTER       ClientMessage_MessageType = 2
	ClientMessage_BACKUP_STARTED ClientMessage_MessageType = 3
	ClientMessage_BACKUP_FINISH  ClientMessage_MessageType = 4
	ClientMessage_STATUS         ClientMessage_MessageType = 5
)

var ClientMessage_MessageType_name = map[int32]string{
	0: "ERROR",
	1: "PONG",
	2: "REGISTER",
	3: "BACKUP_STARTED",
	4: "BACKUP_FINISH",
	5: "STATUS",
}
var ClientMessage_MessageType_value = map[string]int32{
	"ERROR":          0,
	"PONG":           1,
	"REGISTER":       2,
	"BACKUP_STARTED": 3,
	"BACKUP_FINISH":  4,
	"STATUS":         5,
}

func (x ClientMessage_MessageType) String() string {
	return proto.EnumName(ClientMessage_MessageType_name, int32(x))
}
func (ClientMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_message_fe1185ba101a0c0f, []int{1, 0}
}

type ServerMessage struct {
	Type                 ServerMessage_MessageType `protobuf:"varint,1,opt,name=type,proto3,enum=messages.ServerMessage_MessageType" json:"type,omitempty"`
	Message              []byte                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ServerMessage) Reset()         { *m = ServerMessage{} }
func (m *ServerMessage) String() string { return proto.CompactTextString(m) }
func (*ServerMessage) ProtoMessage()    {}
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_fe1185ba101a0c0f, []int{0}
}
func (m *ServerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerMessage.Unmarshal(m, b)
}
func (m *ServerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerMessage.Marshal(b, m, deterministic)
}
func (dst *ServerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerMessage.Merge(dst, src)
}
func (m *ServerMessage) XXX_Size() int {
	return xxx_messageInfo_ServerMessage.Size(m)
}
func (m *ServerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ServerMessage proto.InternalMessageInfo

func (m *ServerMessage) GetType() ServerMessage_MessageType {
	if m != nil {
		return m.Type
	}
	return ServerMessage_ERROR
}

func (m *ServerMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

type ClientMessage struct {
	ClientID             string                    `protobuf:"bytes,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	Type                 ClientMessage_MessageType `protobuf:"varint,2,opt,name=type,proto3,enum=messages.ClientMessage_MessageType" json:"type,omitempty"`
	Message              []byte                    `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ClientMessage) Reset()         { *m = ClientMessage{} }
func (m *ClientMessage) String() string { return proto.CompactTextString(m) }
func (*ClientMessage) ProtoMessage()    {}
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_fe1185ba101a0c0f, []int{1}
}
func (m *ClientMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientMessage.Unmarshal(m, b)
}
func (m *ClientMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientMessage.Marshal(b, m, deterministic)
}
func (dst *ClientMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientMessage.Merge(dst, src)
}
func (m *ClientMessage) XXX_Size() int {
	return xxx_messageInfo_ClientMessage.Size(m)
}
func (m *ClientMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ClientMessage proto.InternalMessageInfo

func (m *ClientMessage) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *ClientMessage) GetType() ClientMessage_MessageType {
	if m != nil {
		return m.Type
	}
	return ClientMessage_ERROR
}

func (m *ClientMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func init() {
	proto.RegisterType((*ServerMessage)(nil), "messages.ServerMessage")
	proto.RegisterType((*ClientMessage)(nil), "messages.ClientMessage")
	proto.RegisterEnum("messages.ServerMessage_MessageType", ServerMessage_MessageType_name, ServerMessage_MessageType_value)
	proto.RegisterEnum("messages.ClientMessage_MessageType", ClientMessage_MessageType_name, ClientMessage_MessageType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessagesClient is the client API for Messages service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessagesClient interface {
	MessagesChat(ctx context.Context, opts ...grpc.CallOption) (Messages_MessagesChatClient, error)
}

type messagesClient struct {
	cc *grpc.ClientConn
}

func NewMessagesClient(cc *grpc.ClientConn) MessagesClient {
	return &messagesClient{cc}
}

func (c *messagesClient) MessagesChat(ctx context.Context, opts ...grpc.CallOption) (Messages_MessagesChatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Messages_serviceDesc.Streams[0], "/messages.Messages/MessagesChat", opts...)
	if err != nil {
		return nil, err
	}
	x := &messagesMessagesChatClient{stream}
	return x, nil
}

type Messages_MessagesChatClient interface {
	Send(*ClientMessage) error
	Recv() (*ServerMessage, error)
	grpc.ClientStream
}

type messagesMessagesChatClient struct {
	grpc.ClientStream
}

func (x *messagesMessagesChatClient) Send(m *ClientMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *messagesMessagesChatClient) Recv() (*ServerMessage, error) {
	m := new(ServerMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MessagesServer is the server API for Messages service.
type MessagesServer interface {
	MessagesChat(Messages_MessagesChatServer) error
}

func RegisterMessagesServer(s *grpc.Server, srv MessagesServer) {
	s.RegisterService(&_Messages_serviceDesc, srv)
}

func _Messages_MessagesChat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MessagesServer).MessagesChat(&messagesMessagesChatServer{stream})
}

type Messages_MessagesChatServer interface {
	Send(*ServerMessage) error
	Recv() (*ClientMessage, error)
	grpc.ServerStream
}

type messagesMessagesChatServer struct {
	grpc.ServerStream
}

func (x *messagesMessagesChatServer) Send(m *ServerMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *messagesMessagesChatServer) Recv() (*ClientMessage, error) {
	m := new(ClientMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Messages_serviceDesc = grpc.ServiceDesc{
	ServiceName: "messages.Messages",
	HandlerType: (*MessagesServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "MessagesChat",
			Handler:       _Messages_MessagesChat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "message.proto",
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_message_fe1185ba101a0c0f) }

var fileDescriptor_message_fe1185ba101a0c0f = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0xd2, 0xc1, 0x6e, 0x82, 0x40,
	0x10, 0x06, 0x60, 0x17, 0xd1, 0xe2, 0x08, 0xba, 0x9d, 0x1e, 0xb4, 0x9e, 0x0c, 0xbd, 0x78, 0x68,
	0x48, 0x63, 0x0f, 0x3d, 0xa3, 0xa2, 0x25, 0xa6, 0x42, 0x76, 0xd7, 0x33, 0xb1, 0x66, 0x63, 0x4d,
	0xb4, 0x12, 0x20, 0x4d, 0x7d, 0xcf, 0xbe, 0x44, 0xdf, 0xa2, 0x29, 0x02, 0x29, 0x4d, 0xf4, 0x04,
	0xf3, 0xe7, 0x5f, 0x36, 0x5f, 0x18, 0x30, 0xf6, 0x32, 0x8e, 0x57, 0x1b, 0x69, 0x85, 0xd1, 0x21,
	0x39, 0xa0, 0x96, 0x8d, 0xb1, 0xf9, 0x45, 0xc0, 0xe0, 0x32, 0xfa, 0x90, 0xd1, 0xcb, 0x29, 0xc2,
	0x27, 0x50, 0x93, 0x63, 0x28, 0xbb, 0xa4, 0x4f, 0x06, 0xad, 0xe1, 0x9d, 0x95, 0x57, 0xad, 0x52,
	0xcd, 0xca, 0x9e, 0xe2, 0x18, 0x4a, 0x96, 0x1e, 0xc0, 0x2e, 0x5c, 0x65, 0xdd, 0xae, 0xd2, 0x27,
	0x03, 0x9d, 0xe5, 0xa3, 0x19, 0x42, 0xf3, 0x4f, 0x1d, 0x1b, 0x50, 0x73, 0x18, 0xf3, 0x18, 0xad,
	0xa0, 0x06, 0xaa, 0xef, 0x2e, 0x66, 0x94, 0xe0, 0x0d, 0xb4, 0x99, 0x33, 0x73, 0xb9, 0x60, 0xb6,
	0x70, 0xbd, 0x45, 0xe0, 0xcd, 0xa9, 0x82, 0x14, 0x74, 0x2e, 0x6c, 0x26, 0x82, 0x91, 0x3d, 0x9e,
	0x2f, 0x7d, 0x5a, 0xc5, 0x36, 0x34, 0xb9, 0xf0, 0xfc, 0x3c, 0x50, 0xb1, 0x05, 0x30, 0x73, 0x44,
	0xc0, 0x85, 0x2d, 0x96, 0x9c, 0xd6, 0x4c, 0x55, 0xab, 0xd3, 0xb5, 0xf9, 0x4d, 0xc0, 0x18, 0xef,
	0xb6, 0xf2, 0x3d, 0xc9, 0x59, 0x3d, 0xd0, 0xd6, 0x69, 0xe0, 0x4e, 0x52, 0x5a, 0x83, 0x15, 0x73,
	0x41, 0x56, 0xfe, 0x93, 0x4b, 0x9f, 0xb8, 0x4c, 0xae, 0x96, 0xc9, 0xdb, 0x8b, 0x64, 0x2f, 0x25,
	0xeb, 0xa0, 0x9d, 0xc8, 0x0e, 0xa3, 0x0a, 0x22, 0xb4, 0x4e, 0xa8, 0x20, 0x25, 0x3b, 0x13, 0x5a,
	0xc5, 0x6b, 0x30, 0xb2, 0x6c, 0xea, 0x2e, 0x5c, 0xfe, 0x4c, 0x55, 0x04, 0xa8, 0x97, 0xad, 0x43,
	0x06, 0x5a, 0x76, 0x55, 0x8c, 0x53, 0xd0, 0xf3, 0xf7, 0xf1, 0xdb, 0x2a, 0xc1, 0xce, 0x19, 0x4b,
	0xaf, 0x73, 0xe6, 0xbf, 0x9a, 0x95, 0x01, 0x79, 0x20, 0xa3, 0x7b, 0xb8, 0xdd, 0x1e, 0xac, 0x4d,
	0x14, 0xae, 0x2d, 0xf9, 0xb9, 0xda, 0x87, 0x3b, 0x19, 0x17, 0x07, 0x46, 0x46, 0x7e, 0x85, 0xff,
	0xbb, 0x4c, 0x3e, 0x79, 0xad, 0xa7, 0x5b, 0xf5, 0xf8, 0x13, 0x00, 0x00, 0xff, 0xff, 0x1f, 0xf6,
	0xd7, 0x64, 0x66, 0x02, 0x00, 0x00,
}
